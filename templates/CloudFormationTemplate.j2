{
    "Mappings": {
        "ClusterPackagesJson": {
            "default": {
                "default": "[\"adminrouter--1166a3736442e7963a68d1d644bf5f54ca3cb01d\", \"avro-cpp--6cffe8b4951f0f945f76eecc43a67c0da53e981b\", \"boost-libs--8d515c2f703c666ae1b6c5ccc35cc0f8fa36677f\", \"bootstrap--24be1a7ff4d16c3ff4889ba3c3d49175251a712d\", \"boto--3890cb2817c00b874ba033abe784b5b343caa3c7\", \"check-time--79e3f6ab99125471e1d94d5f6bc0fea88446831c\", \"cni--7a8572e385c3f5262945c52c8003d1bbb22cf7aa\", \"cosmos--e84c5bf3259405df90d682536ba445cc4839a324\", \"curl--17866a8ae9305826aa5f357a09db2c1f2b2c2ad0\", \"dcos-checks--8fd33919e6f163dba1bd13e4c7e4e0523919a719\", \"dcos-cni--12a77c1e9bebd4cbd600524a864c2bd8483330d3\", \"dcos-config--setup_eb97d9c27f9f0cf24830c852d04eabdd108ba457\", \"dcos-diagnostics--e3b557b0ec8e98617d0cd0fdf136ef9dded96316\", \"dcos-history--23de88ddc1a5f9018dd11b279c5be6a768a18de4\", \"dcos-image--0153db44cf79de8df3c1e1b938166661638c99e7\", \"dcos-image-deps--81d23d00b1acddb316c9b15fd8499c2b10f6b697\", \"dcos-integration-test--9ec173650d4e73ba494603324e7583d23970e4b8\", \"dcos-log--d2af4b1a47d3755a51823e95fbc6c366cf0f9269\", \"dcos-metadata--setup_eb97d9c27f9f0cf24830c852d04eabdd108ba457\", \"dcos-metrics--658acf4c34b2dd974ba7aa07685377d64b61a2cf\", \"dcos-oauth--445bb1388670981c6acc667b2529fc32d4c1fbd4\", \"dcos-signal--4366023212ea49a64c5c9aef1965e5a3133c4b61\", \"dcos-test-utils--1066d896d25f4c1e3f6d9a5e7f9c1c6e8c675bb7\", \"dcos-ui--565495ca2af307abcc74271b192011c913989670\", \"dnspython--0be432372a3820eafcfa66975943c9536dbe1164\", \"docker-gc--89f5535aea154dca504f84cd60eac6f61836aef9\", \"dvdcli--ee85411e3cb9f0988ed54b5cc0789172b887f12f\", \"erlang--d693172f6f033707c7f07ff78fc18ac543d66b41\", \"exhibitor--c3e48bbae19c0ed9c30d7f9396305d1e77130658\", \"flask--6d0f985ad677e8422c7190cbe207424acd813c3b\", \"java--ce5ff19502fca31eaf4a9af86d50a10a8c212a5b\", \"libevent--05dc18bc0ab7434b2738318c5ebaa2e61a311f50\", \"libffi--0e5b99b94f296b2a9a1b75e9fe5f74f5446f5e9b\", \"libsodium--e7056355f1fe160ade83aac0d11352a2bf3844e6\", \"logrotate--877aece1fd506af3b9167b6938c316adfa79d4f5\", \"marathon--accdc43bafeca02da1be340baba4b55011eadf63\", \"mesos--3d4d6dbb15047d80611fa7974b8e8bf69c505200\", \"mesos-dns--600da87080b7634f2380594499004a7ff0b34662\", \"mesos-modules--9f7fdbe4a447739476b075088c9c80532d8f5c49\", \"metronome--2ec6f56be44ed822e7228cb66c4dae6a78345789\", \"navstar--c66f92f01d837433de3e2b19d221c64d26cc54b1\", \"ncurses--030fd6b08ed46a7ecce001c36901f5b4ad5d2af5\", \"octarine--4e37c062d2f145f9c2ce01d30dadf72c2aac5c4a\", \"openssl--44777d19d54a3c33cc19543f2201cb20bf085d98\", \"pkgpanda-api--88ac4a7f45df91bb7edc400d9104cdf223b28d13\", \"pkgpanda-role--612a6734567cc0c7c2ae1d508f03172f4bc7beed\", \"pytest--5e26c8ed9fd2c325672d56fe558299bfbd0f7018\", \"python--5a4285ff7296548732203950bf73d360ea67f6ab\", \"python-azure-mgmt-resource--26cbe8349f3fe139f7dc8bff7f0cb735382314fc\", \"python-cryptography--0d83d8afef4a8faddf0d8b713619d9d76e510a9e\", \"python-dateutil--519201adebeba186049ecd79a9f358f614173b10\", \"python-docopt--0af809c220a922f7f6c58f15beafebaa043477c7\", \"python-gunicorn--2ceb53716237da0736f67f4004682083f6ac68e1\", \"python-isodate--c9efb5859a0cfb06d82f25220cc5b387914af85d\", \"python-jinja2--601a1443aa4c649ab1da10c2a6d7a4477a263fb3\", \"python-kazoo--0ff8e6ef528f58c6f36f0a9df6dc27d3871e5c27\", \"python-markupsafe--1388c95920b4eb920c7a753d620a1ad07fc8b64d\", \"python-passlib--4691268be760073188b555dc436f836c6706b37a\", \"python-pyyaml--d8a775d6e43da5eb239af5cccdf1d3fceeb0335f\", \"python-requests--db0474fab16019ba29a609a354285f221c1a2859\", \"python-retrying--37dd25bf69bcbefe0c50139085d6bb2e22ccf439\", \"python-tox--322c468e2a75c5b143cb06af460b5e801ee34342\", \"rexray--da7f17f8a4b772c0bac3f8d289a08abd4ff272b4\", \"six--93734bac9907087744815f9cb5b6152e9a198fae\", \"spartan--c3d8005b1340bcbc3a00496861745b2d0bb2d697\", \"strace--9be573456909e3931a890785eb6474af7e0dcce4\", \"teamcity-messages--073793b16cf369e58ebdb6348b93ed14b0e5e59a\", \"toybox--0c49f879bfe2f99e6f99b397136894fa5096fa0c\"]"
            }
        },
        "RegionToAmi": {
            "eu-central-1": {
                "stable": "ami-4733f928"
            },
            "eu-west-1": {
                "stable": "ami-89f6dbef"
            },
            "ap-northeast-1": {
                "stable": "ami-86f1b9e1"
            },
            "us-east-1": {
                "stable": "ami-42ad7d54"
            },
            "sa-east-1": {
                "stable": "ami-c51573a9"
            },
            "us-west-1": {
                "stable": "ami-1a1b457a"
            },
            "us-gov-west-1": {
                "stable": "ami-a846fcc9"
            },
            "ap-southeast-2": {
                "stable": "ami-5baeae38"
            },
            "ap-southeast-1": {
                "stable": "ami-27cc7d44"
            },
            "us-west-2": {
                "stable": "ami-444dcd24"
            }
        },
        "Parameters": {
            "PublicSubnetRange": {
                "default": "10.0.4.0/22"
            },
            "PrivateSubnetRange": {
                "default": "10.0.0.0/22"
            },
            "SlaveInstanceType": {
                "default": "{{SlaveInstanceType}}"
            },
            "PublicSlaveInstanceType": {
                "default": "{{PublicSlaveInstanceType}}"
            },
            "StackCreationTimeout": {
                "default": "PT45M"
            },
            "MasterInstanceType": {
                "default": "{{MasterInstanceType}}"
            },
            "VPCSubnetRange": {
                "default": "10.0.0.0/16"
            }
        },
        "NATAmi": {
            "eu-central-1": {
                "default": "ami-204c7a3d"
            },
            "eu-west-1": {
                "default": "ami-3760b040"
            },
            "ap-northeast-1": {
                "default": "ami-55c29e54"
            },
            "us-east-1": {
                "default": "ami-4c9e4b24"
            },
            "sa-east-1": {
                "default": "ami-b972dba4"
            },
            "us-west-1": {
                "default": "ami-2b2b296e"
            },
            "us-gov-west-1": {
                "default": "ami-e8ab1489"
            },
            "ap-southeast-2": {
                "default": "ami-996402a3"
            },
            "ap-southeast-1": {
                "default": "ami-b082dae2"
            },
            "us-west-2": {
                "default": "ami-bb69128b"
            }
        }
    },
    "Outputs": {
        "PublicSlaveDnsAddress": {
            "Value": {
                "Fn::GetAtt": [
                    "PublicSlaveLoadBalancer",
                    "DNSName"
                ]
            },
            "Description": "Public slaves"
        },
        "ExhibitorS3Bucket": {
            "Value": {
                "Ref": "ExhibitorS3Bucket"
            },
            "Description": "Exhibitor S3 bucket name"
        },
        "DnsAddress": {
            "Value": {
                "Fn::GetAtt": [
                    "ElasticLoadBalancer",
                    "DNSName"
                ]
            },
            "Description": "Mesos Master"
        }
    },
    "Resources": {
        "PrivateSubnet": {
            "Properties": {
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "Parameters",
                        "PrivateSubnetRange",
                        "default"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "DependsOn": "Vpc",
            "Type": "AWS::EC2::Subnet",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0e64f095-65d1-481b-9856-b1f4a2e764bc"
                }
            }
        },
        "MasterLaunchConfig": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionToAmi",
                        {
                            "Ref": "AWS::Region"
                        },
                        "stable"
                    ]
                },
                "EbsOptimized": "{{MasterEbsOptimized}}",
                "IamInstanceProfile": {
                    "Ref": "MasterInstanceProfile"
                },
                "InstanceType": {
                    "Fn::FindInMap": [
                        "Parameters",
                        "MasterInstanceType",
                        "default"
                    ]
                },
                "AssociatePublicIpAddress": "true",
                "SecurityGroups": [
                    {
                        "Ref": "MasterSecurityGroup"
                    },
                    {
                        "Ref": "AdminSecurityGroup"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "VirtualName": "ephemeral0",
                        "DeviceName": "/dev/sdb"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config",
                                "\n",
                                "\"coreos\":",
                                "\n",
                                "  \"units\":",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Formats the /var/lib ephemeral drive",
                                "\n",
                                "      Before=var-lib.mount dbus.service",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      RemainAfterExit=yes",
                                "\n",
                                "      ExecStart=/bin/bash -c \"(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)\"",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      format-var-lib-ephemeral.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Mount /var/lib",
                                "\n",
                                "      Before=dbus.service",
                                "\n",
                                "      [Mount]",
                                "\n",
                                "      What=/dev/xvdb",
                                "\n",
                                "      Where=/var/lib",
                                "\n",
                                "      Type=ext4",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      var-lib.mount",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      etcd.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      update-engine.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      locksmithd.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      systemd-resolved.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      restart",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      systemd-journald.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      restart",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      docker.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Before=dcos.target",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d",
                                "\n",
                                "      ExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh /etc/profile.d/dcos.sh",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-link-env.service",
                                "\n",
                                "  - \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=Pkgpanda: Download DC/OS to this host.",
                                "\n",
                                "      After=network-online.target",
                                "\n",
                                "      Wants=network-online.target",
                                "\n",
                                "      ConditionPathExists=!/opt/mesosphere/",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/EarlyAccess/bootstrap/ff88379126df82559446b5916c769f562edb25d7.bootstrap.tar.xz",
                                "\n",
                                "      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere",
                                "\n",
                                "      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere",
                                "\n",
                                "      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-download.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=Pkgpanda: Specialize DC/OS for this host.",
                                "\n",
                                "      Requires=dcos-download.service",
                                "\n",
                                "      After=dcos-download.service",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/environment",
                                "\n",
                                "      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd",
                                "\n",
                                "      [Install]",
                                "\n",
                                "      WantedBy=multi-user.target",
                                "\n",
                                "    \"enable\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-setup.service",
                                "\n",
                                "    \"no_block\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |-",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Signal CloudFormation Success",
                                "\n",
                                "      ConditionPathExists=!/var/lib/dcos-cfn-signal",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=simple",
                                "\n",
                                "      Restart=on-failure",
                                "\n",
                                "      StartLimitInterval=0",
                                "\n",
                                "      RestartSec=15s",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/environment",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata",
                                "\n",
                                "      Environment=\"AWS_CFN_SIGNAL_THIS_RESOURCE=MasterServerGroup\"",
                                "\n",
                                "      ExecStartPre=/bin/ping -c1 leader.mesos",
                                "\n",
                                "      ExecStartPre=/opt/mesosphere/bin/cfn-signal",
                                "\n",
                                "      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-cfn-signal.service",
                                "\n",
                                "    \"no_block\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "  \"update\":",
                                "\n",
                                "    \"reboot-strategy\": |-",
                                "\n",
                                "      off",
                                "\n",
                                "\"write_files\":",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    https://downloads.dcos.io/dcos/EarlyAccess",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/repository-url",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    ",
                                {
                                    "Fn::FindInMap": [
                                        "ClusterPackagesJson",
                                        "default",
                                        "default"
                                    ]
                                },
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/cluster-packages.json",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    [Journal]",
                                "\n",
                                "    MaxLevelConsole=warning",
                                "\n",
                                "    RateLimitInterval=1s",
                                "\n",
                                "    RateLimitBurst=20000",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/systemd/journald.conf.d/dcos.conf",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    libstorage:",
                                "\n",
                                "      integration:",
                                "\n",
                                "        volume:",
                                "\n",
                                "          operations:",
                                "\n",
                                "            unmount:",
                                "\n",
                                "              ignoreusedcount: true",
                                "\n",
                                "      server:",
                                "\n",
                                "        tasks:",
                                "\n",
                                "          logTimeout: 5m",
                                "\n",
                                "    rexray:",
                                "\n",
                                "      loglevel: info",
                                "\n",
                                "      service: ebs",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/rexray/config.yml",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    \"bound_values\":",
                                "\n",
                                "      \"adminrouter_auth_enabled\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "OAuthEnabled"
                                },
                                "\n",
                                "      \"agent_role\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "SlaveRole"
                                },
                                "\n",
                                "      \"aws_region\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "      \"aws_stack_id\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "      \"aws_stack_name\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "      \"cluster_name\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "      \"exhibitor_address\": |-",
                                "\n",
                                "        ",
                                {
                                    "Fn::GetAtt": [
                                        "InternalMasterLoadBalancer",
                                        "DNSName"
                                    ]
                                },
                                "\n",
                                "      \"master_external_loadbalancer\": |-",
                                "\n",
                                "        ",
                                {
                                    "Fn::GetAtt": [
                                        "ElasticLoadBalancer",
                                        "DNSName"
                                    ]
                                },
                                "\n",
                                "      \"master_role\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "MasterRole"
                                },
                                "\n",
                                "      \"oauth_enabled\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "OAuthEnabled"
                                },
                                "\n",
                                "      \"s3_bucket\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "ExhibitorS3Bucket"
                                },
                                "\n",
                                "      \"s3_prefix\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "    \"late_bound_package_id\": |-",
                                "\n",
                                "      dcos-provider-eb97d9c27f9f0cf24830c852d04eabdd108ba457-aws--setup",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/late-config.yaml",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": \"\"",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/roles/master",
                                "\n",
                                "- \"content\": \"\"",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/roles/aws_master",
                                "\n",
                                "- \"content\": \"\"",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/roles/aws",
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a624d67c-ebc0-4f15-bdce-6277a6646687"
                }
            }
        },
        "SlaveLaunchConfig": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionToAmi",
                        {
                            "Ref": "AWS::Region"
                        },
                        "stable"
                    ]
                },
                "EbsOptimized": "{{SlaveEbsOptimized}}",
                "IamInstanceProfile": {
                    "Ref": "SlaveInstanceProfile"
                },
                "InstanceType": {
                    "Fn::FindInMap": [
                        "Parameters",
                        "SlaveInstanceType",
                        "default"
                    ]
                },
                "AssociatePublicIpAddress": "false",
                "SecurityGroups": [
                    {
                        "Ref": "SlaveSecurityGroup"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "VirtualName": "ephemeral0",
                        "DeviceName": "/dev/sdb"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config",
                                "\n",
                                "\"coreos\":",
                                "\n",
                                "  \"units\":",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Formats the /var/lib ephemeral drive",
                                "\n",
                                "      Before=var-lib.mount dbus.service",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      RemainAfterExit=yes",
                                "\n",
                                "      ExecStart=/bin/bash -c \"(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)\"",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      format-var-lib-ephemeral.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Mount /var/lib",
                                "\n",
                                "      Before=dbus.service",
                                "\n",
                                "      [Mount]",
                                "\n",
                                "      What=/dev/xvdb",
                                "\n",
                                "      Where=/var/lib",
                                "\n",
                                "      Type=ext4",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      var-lib.mount",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      etcd.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      update-engine.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      locksmithd.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      systemd-resolved.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      restart",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      systemd-journald.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      restart",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      docker.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Before=dcos.target",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d",
                                "\n",
                                "      ExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh /etc/profile.d/dcos.sh",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-link-env.service",
                                "\n",
                                "  - \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=Pkgpanda: Download DC/OS to this host.",
                                "\n",
                                "      After=network-online.target",
                                "\n",
                                "      Wants=network-online.target",
                                "\n",
                                "      ConditionPathExists=!/opt/mesosphere/",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/EarlyAccess/bootstrap/ff88379126df82559446b5916c769f562edb25d7.bootstrap.tar.xz",
                                "\n",
                                "      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere",
                                "\n",
                                "      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere",
                                "\n",
                                "      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-download.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=Pkgpanda: Specialize DC/OS for this host.",
                                "\n",
                                "      Requires=dcos-download.service",
                                "\n",
                                "      After=dcos-download.service",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/environment",
                                "\n",
                                "      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd",
                                "\n",
                                "      [Install]",
                                "\n",
                                "      WantedBy=multi-user.target",
                                "\n",
                                "    \"enable\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-setup.service",
                                "\n",
                                "    \"no_block\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |-",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Signal CloudFormation Success",
                                "\n",
                                "      ConditionPathExists=!/var/lib/dcos-cfn-signal",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=simple",
                                "\n",
                                "      Restart=on-failure",
                                "\n",
                                "      StartLimitInterval=0",
                                "\n",
                                "      RestartSec=15s",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/environment",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata",
                                "\n",
                                "      Environment=\"AWS_CFN_SIGNAL_THIS_RESOURCE=SlaveServerGroup\"",
                                "\n",
                                "      ExecStartPre=/bin/ping -c1 leader.mesos",
                                "\n",
                                "      ExecStartPre=/opt/mesosphere/bin/cfn-signal",
                                "\n",
                                "      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-cfn-signal.service",
                                "\n",
                                "    \"no_block\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "  \"update\":",
                                "\n",
                                "    \"reboot-strategy\": |-",
                                "\n",
                                "      off",
                                "\n",
                                "\"write_files\":",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    https://downloads.dcos.io/dcos/EarlyAccess",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/repository-url",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    ",
                                {
                                    "Fn::FindInMap": [
                                        "ClusterPackagesJson",
                                        "default",
                                        "default"
                                    ]
                                },
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/cluster-packages.json",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    [Journal]",
                                "\n",
                                "    MaxLevelConsole=warning",
                                "\n",
                                "    RateLimitInterval=1s",
                                "\n",
                                "    RateLimitBurst=20000",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/systemd/journald.conf.d/dcos.conf",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    libstorage:",
                                "\n",
                                "      integration:",
                                "\n",
                                "        volume:",
                                "\n",
                                "          operations:",
                                "\n",
                                "            unmount:",
                                "\n",
                                "              ignoreusedcount: true",
                                "\n",
                                "      server:",
                                "\n",
                                "        tasks:",
                                "\n",
                                "          logTimeout: 5m",
                                "\n",
                                "    rexray:",
                                "\n",
                                "      loglevel: info",
                                "\n",
                                "      service: ebs",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/rexray/config.yml",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    \"bound_values\":",
                                "\n",
                                "      \"adminrouter_auth_enabled\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "OAuthEnabled"
                                },
                                "\n",
                                "      \"agent_role\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "SlaveRole"
                                },
                                "\n",
                                "      \"aws_region\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "      \"aws_stack_id\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "      \"aws_stack_name\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "      \"cluster_name\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "      \"exhibitor_address\": |-",
                                "\n",
                                "        ",
                                {
                                    "Fn::GetAtt": [
                                        "InternalMasterLoadBalancer",
                                        "DNSName"
                                    ]
                                },
                                "\n",
                                "      \"master_external_loadbalancer\": |-",
                                "\n",
                                "        ",
                                {
                                    "Fn::GetAtt": [
                                        "ElasticLoadBalancer",
                                        "DNSName"
                                    ]
                                },
                                "\n",
                                "      \"master_role\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "MasterRole"
                                },
                                "\n",
                                "      \"oauth_enabled\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "OAuthEnabled"
                                },
                                "\n",
                                "      \"s3_bucket\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "ExhibitorS3Bucket"
                                },
                                "\n",
                                "      \"s3_prefix\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "    \"late_bound_package_id\": |-",
                                "\n",
                                "      dcos-provider-eb97d9c27f9f0cf24830c852d04eabdd108ba457-aws--setup",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/late-config.yaml",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": \"\"",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/roles/slave",
                                "\n",
                                "- \"content\": \"\"",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/roles/aws",
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3743171f-34b4-47a2-8bab-6ac579d038b9"
                }
            }
        },
        "PublicNetworkAcl": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::NetworkAcl",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "419805d2-b194-443a-a8e6-dfc97cab44a2"
                }
            }
        },
        "ElasticLoadBalancer": {
            "Properties": {
                "Listeners": [
                    {
                        "InstanceProtocol": "TCP",
                        "Protocol": "TCP",
                        "InstancePort": "80",
                        "LoadBalancerPort": "80"
                    },
                    {
                        "InstanceProtocol": "TCP",
                        "Protocol": "TCP",
                        "InstancePort": "443",
                        "LoadBalancerPort": "443"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "LbSecurityGroup"
                    },
                    {
                        "Ref": "AdminSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "PublicSubnet"
                    }
                ],
                "HealthCheck": {
                    "Timeout": "5",
                    "HealthyThreshold": "2",
                    "UnhealthyThreshold": "2",
                    "Interval": "30",
                    "Target": "TCP:5050"
                }
            },
            "DependsOn": "GatewayToInternet",
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e44899cb-7aef-4a2f-b14e-1a8923986dbb"
                }
            }
        },
        "PrivateRoute": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NATInstance"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            },
            "Type": "AWS::EC2::Route",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a7d3ef15-e099-4efc-ba96-a33b08de77d5"
                }
            }
        },
        "PublicSubnet": {
            "Properties": {
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "Parameters",
                        "PublicSubnetRange",
                        "default"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "DependsOn": "Vpc",
            "Type": "AWS::EC2::Subnet",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "cdb42d83-9a3d-4258-8648-ab3d5b985bd6"
                }
            }
        },
        "GatewayToInternet": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "DependsOn": "InternetGateway",
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "4a7ea83a-6d8e-46e6-91af-4f470fccdfb7"
                }
            }
        },
        "PublicSlaveToPublicSlaveIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f1212a5f-fb11-4ef3-94d5-0a566d072026"
                }
            }
        },
        "VPCDHCPOptionsAssociation": {
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                },
                "DhcpOptionsId": {
                    "Ref": "DHCPOptions"
                }
            },
            "DependsOn": "Vpc",
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "4c2d3a93-0003-4c16-94a3-9766e5e853f5"
                }
            }
        },
        "PublicSlaveLaunchConfig": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionToAmi",
                        {
                            "Ref": "AWS::Region"
                        },
                        "stable"
                    ]
                },
                "EbsOptimized": "{{PublicSlaveEbsOptimized}}",
                "IamInstanceProfile": {
                    "Ref": "SlaveInstanceProfile"
                },
                "InstanceType": {
                    "Fn::FindInMap": [
                        "Parameters",
                        "PublicSlaveInstanceType",
                        "default"
                    ]
                },
                "AssociatePublicIpAddress": "true",
                "SecurityGroups": [
                    {
                        "Ref": "PublicSlaveSecurityGroup"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "VirtualName": "ephemeral0",
                        "DeviceName": "/dev/sdb"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config",
                                "\n",
                                "\"coreos\":",
                                "\n",
                                "  \"units\":",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Formats the /var/lib ephemeral drive",
                                "\n",
                                "      Before=var-lib.mount dbus.service",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      RemainAfterExit=yes",
                                "\n",
                                "      ExecStart=/bin/bash -c \"(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)\"",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      format-var-lib-ephemeral.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Mount /var/lib",
                                "\n",
                                "      Before=dbus.service",
                                "\n",
                                "      [Mount]",
                                "\n",
                                "      What=/dev/xvdb",
                                "\n",
                                "      Where=/var/lib",
                                "\n",
                                "      Type=ext4",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      var-lib.mount",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      etcd.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      update-engine.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"mask\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      locksmithd.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      stop",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      systemd-resolved.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      restart",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      systemd-journald.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      restart",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      docker.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Before=dcos.target",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d",
                                "\n",
                                "      ExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh /etc/profile.d/dcos.sh",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-link-env.service",
                                "\n",
                                "  - \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=Pkgpanda: Download DC/OS to this host.",
                                "\n",
                                "      After=network-online.target",
                                "\n",
                                "      Wants=network-online.target",
                                "\n",
                                "      ConditionPathExists=!/opt/mesosphere/",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/EarlyAccess/bootstrap/ff88379126df82559446b5916c769f562edb25d7.bootstrap.tar.xz",
                                "\n",
                                "      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere",
                                "\n",
                                "      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere",
                                "\n",
                                "      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-download.service",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=Pkgpanda: Specialize DC/OS for this host.",
                                "\n",
                                "      Requires=dcos-download.service",
                                "\n",
                                "      After=dcos-download.service",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=oneshot",
                                "\n",
                                "      StandardOutput=journal+console",
                                "\n",
                                "      StandardError=journal+console",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/environment",
                                "\n",
                                "      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd",
                                "\n",
                                "      [Install]",
                                "\n",
                                "      WantedBy=multi-user.target",
                                "\n",
                                "    \"enable\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-setup.service",
                                "\n",
                                "    \"no_block\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "  - \"command\": |-",
                                "\n",
                                "      start",
                                "\n",
                                "    \"content\": |-",
                                "\n",
                                "      [Unit]",
                                "\n",
                                "      Description=AWS Setup: Signal CloudFormation Success",
                                "\n",
                                "      ConditionPathExists=!/var/lib/dcos-cfn-signal",
                                "\n",
                                "      [Service]",
                                "\n",
                                "      Type=simple",
                                "\n",
                                "      Restart=on-failure",
                                "\n",
                                "      StartLimitInterval=0",
                                "\n",
                                "      RestartSec=15s",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/environment",
                                "\n",
                                "      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata",
                                "\n",
                                "      Environment=\"AWS_CFN_SIGNAL_THIS_RESOURCE=PublicSlaveServerGroup\"",
                                "\n",
                                "      ExecStartPre=/bin/ping -c1 leader.mesos",
                                "\n",
                                "      ExecStartPre=/opt/mesosphere/bin/cfn-signal",
                                "\n",
                                "      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal",
                                "\n",
                                "    \"name\": |-",
                                "\n",
                                "      dcos-cfn-signal.service",
                                "\n",
                                "    \"no_block\": !!bool |-",
                                "\n",
                                "      true",
                                "\n",
                                "  \"update\":",
                                "\n",
                                "    \"reboot-strategy\": |-",
                                "\n",
                                "      off",
                                "\n",
                                "\"write_files\":",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    https://downloads.dcos.io/dcos/EarlyAccess",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/repository-url",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    ",
                                {
                                    "Fn::FindInMap": [
                                        "ClusterPackagesJson",
                                        "default",
                                        "default"
                                    ]
                                },
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/cluster-packages.json",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    [Journal]",
                                "\n",
                                "    MaxLevelConsole=warning",
                                "\n",
                                "    RateLimitInterval=1s",
                                "\n",
                                "    RateLimitBurst=20000",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/systemd/journald.conf.d/dcos.conf",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    libstorage:",
                                "\n",
                                "      integration:",
                                "\n",
                                "        volume:",
                                "\n",
                                "          operations:",
                                "\n",
                                "            unmount:",
                                "\n",
                                "              ignoreusedcount: true",
                                "\n",
                                "      server:",
                                "\n",
                                "        tasks:",
                                "\n",
                                "          logTimeout: 5m",
                                "\n",
                                "    rexray:",
                                "\n",
                                "      loglevel: info",
                                "\n",
                                "      service: ebs",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/rexray/config.yml",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": |",
                                "\n",
                                "    \"bound_values\":",
                                "\n",
                                "      \"adminrouter_auth_enabled\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "OAuthEnabled"
                                },
                                "\n",
                                "      \"agent_role\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "SlaveRole"
                                },
                                "\n",
                                "      \"aws_region\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "      \"aws_stack_id\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "      \"aws_stack_name\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "      \"cluster_name\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "      \"exhibitor_address\": |-",
                                "\n",
                                "        ",
                                {
                                    "Fn::GetAtt": [
                                        "InternalMasterLoadBalancer",
                                        "DNSName"
                                    ]
                                },
                                "\n",
                                "      \"master_external_loadbalancer\": |-",
                                "\n",
                                "        ",
                                {
                                    "Fn::GetAtt": [
                                        "ElasticLoadBalancer",
                                        "DNSName"
                                    ]
                                },
                                "\n",
                                "      \"master_role\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "MasterRole"
                                },
                                "\n",
                                "      \"oauth_enabled\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "OAuthEnabled"
                                },
                                "\n",
                                "      \"s3_bucket\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "ExhibitorS3Bucket"
                                },
                                "\n",
                                "      \"s3_prefix\": |-",
                                "\n",
                                "        ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "    \"late_bound_package_id\": |-",
                                "\n",
                                "      dcos-provider-eb97d9c27f9f0cf24830c852d04eabdd108ba457-aws--setup",
                                "\n",
                                "  \"owner\": |-",
                                "\n",
                                "    root",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/setup-flags/late-config.yaml",
                                "\n",
                                "  \"permissions\": |-",
                                "\n",
                                "    0644",
                                "\n",
                                "- \"content\": \"\"",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/roles/slave_public",
                                "\n",
                                "- \"content\": \"\"",
                                "\n",
                                "  \"path\": |-",
                                "\n",
                                "    /etc/mesosphere/roles/aws",
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "bed22b00-9142-482f-9fb1-237a50185869"
                }
            }
        },
        "SlaveToSlaveIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "SlaveSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "SlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "653cc22a-2108-4fa9-b9e3-b492bdfa1939"
                }
            }
        },
        "PublicSlaveToMasterIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "MasterSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "fb1da688-9d71-4093-a231-19dfe7cd3584"
                }
            }
        },
        "Vpc": {
            "Properties": {
                "EnableDnsHostnames": "true",
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "Parameters",
                        "VPCSubnetRange",
                        "default"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ],
                "EnableDnsSupport": "true"
            },
            "Type": "AWS::EC2::VPC",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "745030ed-3409-4bdb-b21e-7eaa8303cb54"
                }
            }
        },
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            },
            "DependsOn": "Vpc",
            "Type": "AWS::EC2::InternetGateway",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2b0a1a08-8285-41d3-99fd-451ceca5c7a1"
                }
            }
        },
        "InternalMasterLoadBalancer": {
            "Properties": {
                "Scheme": "internal",
                "SecurityGroups": [
                    {
                        "Ref": "LbSecurityGroup"
                    },
                    {
                        "Ref": "AdminSecurityGroup"
                    },
                    {
                        "Ref": "SlaveSecurityGroup"
                    },
                    {
                        "Ref": "PublicSlaveSecurityGroup"
                    },
                    {
                        "Ref": "MasterSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "PublicSubnet"
                    }
                ],
                "HealthCheck": {
                    "Timeout": "5",
                    "HealthyThreshold": "2",
                    "UnhealthyThreshold": "2",
                    "Interval": "30",
                    "Target": "TCP:5050"
                },
                "Listeners": [
                    {
                        "InstanceProtocol": "HTTP",
                        "Protocol": "HTTP",
                        "InstancePort": "5050",
                        "LoadBalancerPort": "5050"
                    },
                    {
                        "InstanceProtocol": "TCP",
                        "Protocol": "TCP",
                        "InstancePort": "2181",
                        "LoadBalancerPort": "2181"
                    },
                    {
                        "InstanceProtocol": "HTTP",
                        "Protocol": "HTTP",
                        "InstancePort": "8181",
                        "LoadBalancerPort": "8181"
                    },
                    {
                        "InstanceProtocol": "TCP",
                        "Protocol": "TCP",
                        "InstancePort": "80",
                        "LoadBalancerPort": "80"
                    },
                    {
                        "InstanceProtocol": "TCP",
                        "Protocol": "TCP",
                        "InstancePort": "443",
                        "LoadBalancerPort": "443"
                    },
                    {
                        "InstanceProtocol": "HTTP",
                        "Protocol": "HTTP",
                        "InstancePort": "8080",
                        "LoadBalancerPort": "8080"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "ad937819-f8aa-4a12-a31c-936eb847ec1b"
                }
            }
        },
        "PublicSlaveServerGroup": {
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "StackCreationTimeout",
                            "default"
                        ]
                    },
                    "Count": {
                        "Ref": "PublicSlaveInstanceCount"
                    }
                }
            },
            "Properties": {
                "MaxSize": {
                    "Ref": "PublicSlaveInstanceCount"
                },
                "DesiredCapacity": {
                    "Ref": "PublicSlaveInstanceCount"
                },
                "MinSize": {
                    "Ref": "PublicSlaveInstanceCount"
                },
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "PublicSlaveLaunchConfig"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "PublicSlaveLoadBalancer"
                    }
                ],
                "AvailabilityZones": [
                    {
                        "Fn::GetAtt": [
                            "PublicSubnet",
                            "AvailabilityZone"
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "role",
                        "PropagateAtLaunch": "true",
                        "Value": "mesos-slave"
                    }
                ]
            },
            "DependsOn": "GatewayToInternet",
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3ed99612-8fac-4633-ba60-40d8f1096c7e"
                }
            }
        },
        "LbSecurityGroup": {
            "Properties": {
                "GroupDescription": "Mesos Master LB",
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f43020cf-b533-4c81-8080-20705fef196f"
                }
            }
        },
        "PublicSlaveLoadBalancer": {
            "Properties": {
                "Listeners": [
                    {
                        "InstanceProtocol": "TCP",
                        "Protocol": "TCP",
                        "InstancePort": "80",
                        "LoadBalancerPort": "80"
                    },
                    {
                        "InstanceProtocol": "TCP",
                        "Protocol": "TCP",
                        "InstancePort": "443",
                        "LoadBalancerPort": "443"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "PublicSlaveSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "PublicSubnet"
                    }
                ],
                "HealthCheck": {
                    "Timeout": "2",
                    "HealthyThreshold": "2",
                    "UnhealthyThreshold": "2",
                    "Interval": "5",
                    "Target": "HTTP:9090/_haproxy_health_check"
                }
            },
            "DependsOn": "GatewayToInternet",
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "c8095230-7d52-4fe1-aa2d-bc1459572013"
                }
            }
        },
        "PublicSubnetNetworkAclAssociation": {
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "4b8f65ce-33ac-4f26-b080-ac7dc2f17f8d"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation": {
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f885364f-0e20-40f2-9f71-08d8ab053227"
                }
            }
        },
        "PublicSlaveIngressOne": {
            "Properties": {
                "ToPort": "21",
                "FromPort": "0",
                "CidrIp": "0.0.0.0/0",
                "IpProtocol": "tcp",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "PublicRoute": {
            "Properties": {
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "DependsOn": "GatewayToInternet",
            "Type": "AWS::EC2::Route",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "997234c1-7824-43c0-8e9d-17c62704b120"
                }
            }
        },
        "ExhibitorS3Bucket": {
            "DeletionPolicy": "Retain",
            "Type": "AWS::S3::Bucket",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "fcb815aa-48ef-4e7b-b5f9-1144342ba892"
                }
            }
        },
        "PrivateNetworkAcl": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::NetworkAcl",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "00cfb225-0fd6-4a61-bd34-28494982f77a"
                }
            }
        },
        "PublicSlaveToSlaveIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "SlaveSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e2149fca-fd53-4443-a804-6bd3678295b7"
                }
            }
        },
        "AdminSecurityGroup": {
            "Properties": {
                "SecurityGroupIngress": [
                    {
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "AdminLocation"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "22"
                    },
                    {
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "AdminLocation"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "80"
                    },
                    {
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "AdminLocation"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "443"
                    }
                ],
                "GroupDescription": "Enable admin access to servers",
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a0573e0b-f848-4be8-be5b-f7e0660e7463"
                }
            }
        },
        "MasterInstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "MasterRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7ce147d5-8995-4651-85b6-05d92735ef04"
                }
            }
        },
        "SlaveRole": {
            "Properties": {
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Ref": "AWS::StackId"
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Action": [
                                        "cloudformation:*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Action": [
                                        "ec2:CreateTags",
                                        "ec2:DescribeInstances",
                                        "ec2:CreateVolume",
                                        "ec2:DeleteVolume",
                                        "ec2:AttachVolume",
                                        "ec2:DetachVolume",
                                        "ec2:DescribeVolumes",
                                        "ec2:DescribeVolumeStatus",
                                        "ec2:DescribeVolumeAttribute",
                                        "ec2:CreateSnapshot",
                                        "ec2:CopySnapshot",
                                        "ec2:DeleteSnapshot",
                                        "ec2:DescribeSnapshots",
                                        "ec2:DescribeSnapshotAttribute",
                                        "autoscaling:DescribeAutoScalingGroups",
                                        "cloudwatch:PutMetricData"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "Slaves"
                    }
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            },
            "Type": "AWS::IAM::Role",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6c1f20fa-35c6-4bda-902b-9ac9383bc99d"
                }
            }
        },
        "SlaveInstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "SlaveRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "85866155-f99c-45ac-8a01-93f0365ade4a"
                }
            }
        },
        "PublicSlaveSecurityGroup": {
            "Properties": {
                "GroupDescription": "Mesos Slaves Public",
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                }
            }
        },
        "PublicSubnetRouteTableAssociation": {
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "4766252d-34da-4869-863b-28b0e15c603f"
                }
            }
        },
        "MasterRole": {
            "Properties": {
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::If": [
                                                            "RegionIsUsGovWest1",
                                                            "arn:aws-us-gov:s3:::",
                                                            "arn:aws:s3:::"
                                                        ]
                                                    },
                                                    {
                                                        "Ref": "ExhibitorS3Bucket"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::If": [
                                                            "RegionIsUsGovWest1",
                                                            "arn:aws-us-gov:s3:::",
                                                            "arn:aws:s3:::"
                                                        ]
                                                    },
                                                    {
                                                        "Ref": "ExhibitorS3Bucket"
                                                    }
                                                ]
                                            ]
                                        }
                                    ],
                                    "Action": [
                                        "s3:AbortMultipartUpload",
                                        "s3:DeleteObject",
                                        "s3:GetBucketAcl",
                                        "s3:GetBucketPolicy",
                                        "s3:GetObject",
                                        "s3:GetObjectAcl",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads",
                                        "s3:ListMultipartUploadParts",
                                        "s3:PutObject",
                                        "s3:PutObjectAcl"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Ref": "AWS::StackId"
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Action": [
                                        "cloudformation:*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Action": [
                                        "ec2:DescribeKeyPairs",
                                        "ec2:DescribeSubnets",
                                        "autoscaling:DescribeLaunchConfigurations",
                                        "autoscaling:UpdateAutoScalingGroup",
                                        "autoscaling:DescribeAutoScalingGroups",
                                        "autoscaling:DescribeScalingActivities",
                                        "elasticloadbalancing:DescribeLoadBalancers"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "root"
                    }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            },
            "Type": "AWS::IAM::Role",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "dbeb3c02-aaf8-4722-816c-cd3512f10498"
                }
            }
        },
        "PublicRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "DependsOn": "Vpc",
            "Type": "AWS::EC2::RouteTable",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "c8d71fad-cde8-4e51-8ced-a5739e229394"
                }
            }
        },
        "SlaveToPublicSlaveIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "SlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "9e5b0173-ab14-42c3-ab7e-ff12d818daca"
                }
            }
        },
        "PublicSlaveIngressFour": {
            "Properties": {
                "ToPort": "21",
                "FromPort": "0",
                "CidrIp": "0.0.0.0/0",
                "IpProtocol": "udp",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "MasterToSlaveIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "SlaveSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "MasterSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "73c2a43c-4bdc-4489-a9ce-7397de2737c8"
                }
            }
        },
        "PrivateOutboundNetworkAclEntry": {
            "Properties": {
                "Egress": "true",
                "RuleAction": "allow",
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "85efd767-624b-4b5e-8a79-e911ee5965a5"
                }
            }
        },
        "MasterToMasterIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "MasterSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "MasterSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2a6b9559-f72f-4a82-ab1c-16da390195a7"
                }
            }
        },
        "SlaveSecurityGroup": {
            "Properties": {
                "GroupDescription": "Mesos Slaves",
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "9ea32b48-e341-47dd-b027-6700463b2397"
                }
            }
        },
        "DHCPOptions": {
            "Properties": {
                "DomainName": {
                    "Fn::If": [
                        "RegionIsUsEast1",
                        "ec2.internal",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ".compute.internal"
                                ]
                            ]
                        }
                    ]
                },
                "DomainNameServers": [
                    "AmazonProvidedDNS"
                ]
            },
            "Type": "AWS::EC2::DHCPOptions",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "c9709653-bec8-486c-ab6a-d92ce5cd7c47"
                }
            }
        },
        "PublicSlaveIngressFive": {
            "Properties": {
                "ToPort": "5050",
                "FromPort": "23",
                "CidrIp": "0.0.0.0/0",
                "IpProtocol": "udp",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "PublicSlaveIngressThree": {
            "Properties": {
                "ToPort": "32000",
                "FromPort": "5052",
                "CidrIp": "0.0.0.0/0",
                "IpProtocol": "tcp",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "PrivateInboundNetworkAclEntry": {
            "Properties": {
                "Egress": "false",
                "RuleAction": "allow",
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f5d1de77-bfa9-41af-99a0-0c4da667d135"
                }
            }
        },
        "PublicSlaveIngressTwo": {
            "Properties": {
                "ToPort": "5050",
                "FromPort": "23",
                "CidrIp": "0.0.0.0/0",
                "IpProtocol": "tcp",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "OutboundNetworkAclEntry": {
            "Properties": {
                "Egress": "true",
                "RuleAction": "allow",
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "94067f75-00f9-49eb-a729-b45dbb4f6c37"
                }
            }
        },
        "MasterSecurityGroup": {
            "Properties": {
                "SecurityGroupIngress": [
                    {
                        "ToPort": "5050",
                        "SourceSecurityGroupId": {
                            "Ref": "LbSecurityGroup"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "5050"
                    },
                    {
                        "ToPort": "80",
                        "SourceSecurityGroupId": {
                            "Ref": "LbSecurityGroup"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "80"
                    },
                    {
                        "ToPort": "443",
                        "SourceSecurityGroupId": {
                            "Ref": "LbSecurityGroup"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "443"
                    },
                    {
                        "ToPort": "8080",
                        "SourceSecurityGroupId": {
                            "Ref": "LbSecurityGroup"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "8080"
                    },
                    {
                        "ToPort": "8181",
                        "SourceSecurityGroupId": {
                            "Ref": "LbSecurityGroup"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "8181"
                    },
                    {
                        "ToPort": "2181",
                        "SourceSecurityGroupId": {
                            "Ref": "LbSecurityGroup"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "2181"
                    }
                ],
                "GroupDescription": "Mesos Masters",
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "5315c904-7318-4993-9fdc-4cef97dec756"
                }
            }
        },
        "MasterServerGroup": {
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "StackCreationTimeout",
                            "default"
                        ]
                    },
                    "Count": 1
                }
            },
            "Properties": {
                "MaxSize": 1,
                "DesiredCapacity": 1,
                "MinSize": 1,
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "MasterLaunchConfig"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "ElasticLoadBalancer"
                    },
                    {
                        "Ref": "InternalMasterLoadBalancer"
                    }
                ],
                "AvailabilityZones": [
                    {
                        "Fn::GetAtt": [
                            "PublicSubnet",
                            "AvailabilityZone"
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "role",
                        "PropagateAtLaunch": "true",
                        "Value": "mesos-master"
                    }
                ]
            },
            "DependsOn": "GatewayToInternet",
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "276000fc-bab5-452a-a4d5-2750ba0b5bf9"
                }
            }
        },
        "NATInstance": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "NATAmi",
                        {
                            "Ref": "AWS::Region"
                        },
                        "default"
                    ]
                },
                "InstanceType": "{{NATInstanceType}}",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SourceDestCheck": "false",
                "NetworkInterfaces": [
                    {
                        "SubnetId": {
                            "Ref": "PublicSubnet"
                        },
                        "AssociatePublicIpAddress": "true",
                        "GroupSet": [
                            {
                                "Ref": "SlaveSecurityGroup"
                            },
                            {
                                "Ref": "MasterSecurityGroup"
                            },
                            {
                                "Ref": "AdminSecurityGroup"
                            }
                        ],
                        "DeleteOnTermination": "true",
                        "DeviceIndex": "0"
                    }
                ]
            },
            "DependsOn": "GatewayToInternet",
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0c0e8ffd-3231-41cd-91e0-2110731813e2"
                }
            }
        },
        "MasterToPublicSlaveIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "MasterSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "1117a0ca-37bb-482a-90f2-bbbbcd31e50c"
                }
            }
        },
        "PrivateSubnetNetworkAclAssociation": {
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet"
                },
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2301d79d-c356-4957-91e8-de72ffffebdd"
                }
            }
        },
        "PrivateRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ],
                "VpcId": {
                    "Ref": "Vpc"
                }
            },
            "Type": "AWS::EC2::RouteTable",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2f348d40-564c-400e-b481-136e3e306ec9"
                }
            }
        },
        "PublicSlaveIngressSix": {
            "Properties": {
                "ToPort": "32000",
                "FromPort": "5052",
                "CidrIp": "0.0.0.0/0",
                "IpProtocol": "udp",
                "GroupId": {
                    "Ref": "PublicSlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "InboundNetworkAclEntry": {
            "Properties": {
                "Egress": "false",
                "RuleAction": "allow",
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0b61bd57-6c52-426a-9a3d-082f80510312"
                }
            }
        },
        "SlaveToMasterLBIngress": {
            "Properties": {
                "ToPort": "2181",
                "FromPort": "2181",
                "IpProtocol": "tcp",
                "GroupId": {
                    "Ref": "LbSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "SlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a307d6d0-84ea-415e-a63b-7f4d12a2b8ad"
                }
            }
        },
        "SlaveToMasterIngress": {
            "Properties": {
                "ToPort": "65535",
                "FromPort": "0",
                "IpProtocol": "-1",
                "GroupId": {
                    "Ref": "MasterSecurityGroup"
                },
                "SourceSecurityGroupId": {
                    "Ref": "SlaveSecurityGroup"
                }
            },
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "5ab4c3f1-d0fd-4e0d-8ad0-1e0f17e9d8b7"
                }
            }
        },
        "SlaveServerGroup": {
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": {
                        "Fn::FindInMap": [
                            "Parameters",
                            "StackCreationTimeout",
                            "default"
                        ]
                    },
                    "Count": {
                        "Ref": "SlaveInstanceCountDesired"
                    }
                }
            },
            "Properties": {
                "MaxSize": {
                    "Ref": "SlaveInstanceCount"
                },
                "DesiredCapacity": {
                    "Ref": "SlaveInstanceCountDesired"
                },
                "MinSize": {
                    "Ref": "SlaveInstanceCountDesired"
                },
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PrivateSubnet"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "SlaveLaunchConfig"
                },
                "AvailabilityZones": [
                    {
                        "Fn::GetAtt": [
                            "PrivateSubnet",
                            "AvailabilityZone"
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "role",
                        "PropagateAtLaunch": "true",
                        "Value": "mesos-slave"
                    }
                ]
            },
            "DependsOn": [
                "PrivateOutboundNetworkAclEntry",
                "NATInstance"
            ],
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "1b5b4df0-9331-4373-9e30-7c3ae15c809e"
                }
            }
        }
    },
    "Parameters": {
        "SlaveInstanceCount": {
            "Description": "Required: Specify the number of private agent nodes or accept the default.",
            "Default": "{{SlaveInstanceCount}}",
            "Type": "Number"
        },
        "SlaveInstanceCountDesired": {
            "Description": "Required: Specify the number of private agent nodes or accept the default.",
            "Default": "{{SlaveInstanceCountDesired}}",
            "Type": "Number"
        },
        "PublicSlaveInstanceCount": {
            "Description": "Required: Specify the number of public agent nodes or accept the default.",
            "Default": "{{PublicSlaveInstanceCount}}",
            "Type": "Number"
        },
        "OAuthEnabled": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Description": "\nEnable OAuth authentication",
            "Default": "true",
            "Type": "String"
        },
        "AdminLocation": {
            "ConstraintDescription": "must be a valid CIDR.",
            "Default": "0.0.0.0/0",
            "Type": "String",
            "MinLength": "9",
            "Description": "Optional: Specify the IP range to whitelist for access to the admin zone. Must be a valid CIDR.",
            "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
            "MaxLength": "18"
        },
        "KeyName": {
            "Description": "Required: Specify your AWS EC2 Key Pair.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Conditions": {
        "RegionIsUsGovWest1": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
        "RegionIsUsEast1": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-east-1"
            ]
        }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "DcosImageCommit": "a5ecc9af5d9ca903f53fa16f6f0ebd597095652e",
        "TemplateGenerationDate": "2017-09-01 06:19:18.939643",
        "AWS::CloudFormation::Designer": {
            "c9709653-bec8-486c-ab6a-d92ce5cd7c47": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 1110
                },
                "z": 1,
                "embeds": []
            },
            "6c1f20fa-35c6-4bda-902b-9ac9383bc99d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 1110
                },
                "z": 1,
                "embeds": []
            },
            "85866155-f99c-45ac-8a01-93f0365ade4a": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 1110
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "6c1f20fa-35c6-4bda-902b-9ac9383bc99d"
                ]
            },
            "fcb815aa-48ef-4e7b-b5f9-1144342ba892": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 420,
                    "y": 1110
                },
                "z": 1,
                "embeds": []
            },
            "dbeb3c02-aaf8-4722-816c-cd3512f10498": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 540,
                    "y": 1110
                },
                "z": 1,
                "embeds": [],
                "isrelatedto": [
                    "fcb815aa-48ef-4e7b-b5f9-1144342ba892"
                ]
            },
            "7ce147d5-8995-4651-85b6-05d92735ef04": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 660,
                    "y": 1110
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "dbeb3c02-aaf8-4722-816c-cd3512f10498"
                ]
            },
            "745030ed-3409-4bdb-b21e-7eaa8303cb54": {
                "size": {
                    "width": 1050,
                    "height": 960
                },
                "position": {
                    "x": 20,
                    "y": 260
                },
                "z": 1,
                "embeds": [
                    "2f348d40-564c-400e-b481-136e3e306ec9",
                    "9ea32b48-e341-47dd-b027-6700463b2397",
                    "c8d71fad-cde8-4e51-8ced-a5739e229394",
                    "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0",
                    "a0573e0b-f848-4be8-be5b-f7e0660e7463",
                    "00cfb225-0fd6-4a61-bd34-28494982f77a",
                    "f43020cf-b533-4c81-8080-20705fef196f",
                    "5315c904-7318-4993-9fdc-4cef97dec756",
                    "cdb42d83-9a3d-4258-8648-ab3d5b985bd6",
                    "419805d2-b194-443a-a8e6-dfc97cab44a2",
                    "0e64f095-65d1-481b-9856-b1f4a2e764bc"
                ]
            },
            "2f348d40-564c-400e-b481-136e3e306ec9": {
                "size": {
                    "width": 240,
                    "height": 240
                },
                "position": {
                    "x": 740,
                    "y": 320
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": [
                    "a7d3ef15-e099-4efc-ba96-a33b08de77d5"
                ]
            },
            "9ea32b48-e341-47dd-b027-6700463b2397": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 740,
                    "y": 830
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": []
            },
            "c8d71fad-cde8-4e51-8ced-a5739e229394": {
                "size": {
                    "width": 240,
                    "height": 240
                },
                "position": {
                    "x": 440,
                    "y": 620
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": [
                    "997234c1-7824-43c0-8e9d-17c62704b120"
                ],
                "dependson": [
                    "745030ed-3409-4bdb-b21e-7eaa8303cb54"
                ]
            },
            "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 860,
                    "y": 830
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": []
            },
            "9e5b0173-ab14-42c3-ab7e-ff12d818daca": {
                "source": {
                    "id": "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                },
                "target": {
                    "id": "9ea32b48-e341-47dd-b027-6700463b2397"
                }
            },
            "e2149fca-fd53-4443-a804-6bd3678295b7": {
                "source": {
                    "id": "9ea32b48-e341-47dd-b027-6700463b2397"
                },
                "target": {
                    "id": "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                }
            },
            "a0573e0b-f848-4be8-be5b-f7e0660e7463": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 50,
                    "y": 920
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": []
            },
            "00cfb225-0fd6-4a61-bd34-28494982f77a": {
                "size": {
                    "width": 330,
                    "height": 240
                },
                "position": {
                    "x": 50,
                    "y": 620
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": [
                    "f5d1de77-bfa9-41af-99a0-0c4da667d135",
                    "85efd767-624b-4b5e-8a79-e911ee5965a5"
                ]
            },
            "f5d1de77-bfa9-41af-99a0-0c4da667d135": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 80,
                    "y": 680
                },
                "z": 3,
                "parent": "00cfb225-0fd6-4a61-bd34-28494982f77a",
                "embeds": []
            },
            "85efd767-624b-4b5e-8a79-e911ee5965a5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 200,
                    "y": 680
                },
                "z": 3,
                "parent": "00cfb225-0fd6-4a61-bd34-28494982f77a",
                "embeds": []
            },
            "f43020cf-b533-4c81-8080-20705fef196f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 170,
                    "y": 920
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": []
            },
            "a307d6d0-84ea-415e-a63b-7f4d12a2b8ad": {
                "source": {
                    "id": "f43020cf-b533-4c81-8080-20705fef196f"
                },
                "target": {
                    "id": "9ea32b48-e341-47dd-b027-6700463b2397"
                }
            },
            "5315c904-7318-4993-9fdc-4cef97dec756": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 290,
                    "y": 920
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": [],
                "isrelatedto": [
                    "f43020cf-b533-4c81-8080-20705fef196f"
                ]
            },
            "5ab4c3f1-d0fd-4e0d-8ad0-1e0f17e9d8b7": {
                "source": {
                    "id": "5315c904-7318-4993-9fdc-4cef97dec756"
                },
                "target": {
                    "id": "9ea32b48-e341-47dd-b027-6700463b2397"
                }
            },
            "1117a0ca-37bb-482a-90f2-bbbbcd31e50c": {
                "source": {
                    "id": "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                },
                "target": {
                    "id": "5315c904-7318-4993-9fdc-4cef97dec756"
                }
            },
            "2a6b9559-f72f-4a82-ab1c-16da390195a7": {
                "source": {
                    "id": "5315c904-7318-4993-9fdc-4cef97dec756"
                },
                "target": {
                    "id": "5315c904-7318-4993-9fdc-4cef97dec756"
                }
            },
            "73c2a43c-4bdc-4489-a9ce-7397de2737c8": {
                "source": {
                    "id": "9ea32b48-e341-47dd-b027-6700463b2397"
                },
                "target": {
                    "id": "5315c904-7318-4993-9fdc-4cef97dec756"
                }
            },
            "2b0a1a08-8285-41d3-99fd-451ceca5c7a1": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 780,
                    "y": 1110
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "745030ed-3409-4bdb-b21e-7eaa8303cb54"
                ]
            },
            "fb1da688-9d71-4093-a231-19dfe7cd3584": {
                "source": {
                    "id": "5315c904-7318-4993-9fdc-4cef97dec756"
                },
                "target": {
                    "id": "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                }
            },
            "653cc22a-2108-4fa9-b9e3-b492bdfa1939": {
                "source": {
                    "id": "9ea32b48-e341-47dd-b027-6700463b2397"
                },
                "target": {
                    "id": "9ea32b48-e341-47dd-b027-6700463b2397"
                }
            },
            "4c2d3a93-0003-4c16-94a3-9766e5e853f5": {
                "source": {
                    "id": "c9709653-bec8-486c-ab6a-d92ce5cd7c47"
                },
                "target": {
                    "id": "745030ed-3409-4bdb-b21e-7eaa8303cb54"
                }
            },
            "f1212a5f-fb11-4ef3-94d5-0a566d072026": {
                "source": {
                    "id": "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                },
                "target": {
                    "id": "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                }
            },
            "4a7ea83a-6d8e-46e6-91af-4f470fccdfb7": {
                "source": {
                    "id": "2b0a1a08-8285-41d3-99fd-451ceca5c7a1"
                },
                "target": {
                    "id": "745030ed-3409-4bdb-b21e-7eaa8303cb54"
                }
            },
            "997234c1-7824-43c0-8e9d-17c62704b120": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 470,
                    "y": 680
                },
                "z": 3,
                "parent": "c8d71fad-cde8-4e51-8ced-a5739e229394",
                "embeds": [],
                "references": [
                    "2b0a1a08-8285-41d3-99fd-451ceca5c7a1"
                ],
                "dependson": [
                    "4a7ea83a-6d8e-46e6-91af-4f470fccdfb7"
                ]
            },
            "cdb42d83-9a3d-4258-8648-ab3d5b985bd6": {
                "size": {
                    "width": 240,
                    "height": 240
                },
                "position": {
                    "x": 440,
                    "y": 320
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": [
                    "0c0e8ffd-3231-41cd-91e0-2110731813e2"
                ],
                "dependson": [
                    "745030ed-3409-4bdb-b21e-7eaa8303cb54"
                ]
            },
            "0c0e8ffd-3231-41cd-91e0-2110731813e2": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 470,
                    "y": 380
                },
                "z": 3,
                "parent": "cdb42d83-9a3d-4258-8648-ab3d5b985bd6",
                "embeds": [],
                "dependson": [
                    "4a7ea83a-6d8e-46e6-91af-4f470fccdfb7"
                ],
                "isrelatedto": [
                    "9ea32b48-e341-47dd-b027-6700463b2397",
                    "5315c904-7318-4993-9fdc-4cef97dec756",
                    "a0573e0b-f848-4be8-be5b-f7e0660e7463"
                ]
            },
            "4766252d-34da-4869-863b-28b0e15c603f": {
                "source": {
                    "id": "c8d71fad-cde8-4e51-8ced-a5739e229394"
                },
                "target": {
                    "id": "cdb42d83-9a3d-4258-8648-ab3d5b985bd6"
                }
            },
            "c8095230-7d52-4fe1-aa2d-bc1459572013": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 900,
                    "y": 1110
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "cdb42d83-9a3d-4258-8648-ab3d5b985bd6",
                    "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                ],
                "dependson": [
                    "4a7ea83a-6d8e-46e6-91af-4f470fccdfb7"
                ]
            },
            "ad937819-f8aa-4a12-a31c-936eb847ec1b": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1020,
                    "y": 1110
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "cdb42d83-9a3d-4258-8648-ab3d5b985bd6",
                    "f43020cf-b533-4c81-8080-20705fef196f",
                    "a0573e0b-f848-4be8-be5b-f7e0660e7463",
                    "9ea32b48-e341-47dd-b027-6700463b2397",
                    "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0",
                    "5315c904-7318-4993-9fdc-4cef97dec756"
                ]
            },
            "a7d3ef15-e099-4efc-ba96-a33b08de77d5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 770,
                    "y": 380
                },
                "z": 3,
                "parent": "2f348d40-564c-400e-b481-136e3e306ec9",
                "embeds": [],
                "references": [
                    "0c0e8ffd-3231-41cd-91e0-2110731813e2"
                ]
            },
            "e44899cb-7aef-4a2f-b14e-1a8923986dbb": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1170,
                    "y": 90
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "cdb42d83-9a3d-4258-8648-ab3d5b985bd6",
                    "f43020cf-b533-4c81-8080-20705fef196f",
                    "a0573e0b-f848-4be8-be5b-f7e0660e7463"
                ],
                "dependson": [
                    "4a7ea83a-6d8e-46e6-91af-4f470fccdfb7"
                ]
            },
            "bed22b00-9142-482f-9fb1-237a50185869": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1170,
                    "y": 210
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "a544a2bf-7316-4aaa-8bdf-55cd2c072ce0"
                ],
                "isrelatedto": [
                    "85866155-f99c-45ac-8a01-93f0365ade4a",
                    "6c1f20fa-35c6-4bda-902b-9ac9383bc99d",
                    "ad937819-f8aa-4a12-a31c-936eb847ec1b",
                    "e44899cb-7aef-4a2f-b14e-1a8923986dbb",
                    "dbeb3c02-aaf8-4722-816c-cd3512f10498",
                    "fcb815aa-48ef-4e7b-b5f9-1144342ba892"
                ]
            },
            "3ed99612-8fac-4633-ba60-40d8f1096c7e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1170,
                    "y": 330
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "bed22b00-9142-482f-9fb1-237a50185869",
                    "cdb42d83-9a3d-4258-8648-ab3d5b985bd6",
                    "c8095230-7d52-4fe1-aa2d-bc1459572013"
                ],
                "dependson": [
                    "4a7ea83a-6d8e-46e6-91af-4f470fccdfb7"
                ]
            },
            "419805d2-b194-443a-a8e6-dfc97cab44a2": {
                "size": {
                    "width": 330,
                    "height": 240
                },
                "position": {
                    "x": 50,
                    "y": 320
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": [
                    "0b61bd57-6c52-426a-9a3d-082f80510312",
                    "94067f75-00f9-49eb-a729-b45dbb4f6c37"
                ]
            },
            "0b61bd57-6c52-426a-9a3d-082f80510312": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 80,
                    "y": 380
                },
                "z": 3,
                "parent": "419805d2-b194-443a-a8e6-dfc97cab44a2",
                "embeds": []
            },
            "94067f75-00f9-49eb-a729-b45dbb4f6c37": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 200,
                    "y": 380
                },
                "z": 3,
                "parent": "419805d2-b194-443a-a8e6-dfc97cab44a2",
                "embeds": []
            },
            "4b8f65ce-33ac-4f26-b080-ac7dc2f17f8d": {
                "source": {
                    "id": "419805d2-b194-443a-a8e6-dfc97cab44a2"
                },
                "target": {
                    "id": "cdb42d83-9a3d-4258-8648-ab3d5b985bd6"
                }
            },
            "3743171f-34b4-47a2-8bab-6ac579d038b9": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1170,
                    "y": 450
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "9ea32b48-e341-47dd-b027-6700463b2397"
                ],
                "isrelatedto": [
                    "85866155-f99c-45ac-8a01-93f0365ade4a",
                    "6c1f20fa-35c6-4bda-902b-9ac9383bc99d",
                    "ad937819-f8aa-4a12-a31c-936eb847ec1b",
                    "e44899cb-7aef-4a2f-b14e-1a8923986dbb",
                    "dbeb3c02-aaf8-4722-816c-cd3512f10498",
                    "fcb815aa-48ef-4e7b-b5f9-1144342ba892"
                ]
            },
            "a624d67c-ebc0-4f15-bdce-6277a6646687": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1170,
                    "y": 570
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "5315c904-7318-4993-9fdc-4cef97dec756",
                    "a0573e0b-f848-4be8-be5b-f7e0660e7463"
                ],
                "isrelatedto": [
                    "7ce147d5-8995-4651-85b6-05d92735ef04",
                    "6c1f20fa-35c6-4bda-902b-9ac9383bc99d",
                    "ad937819-f8aa-4a12-a31c-936eb847ec1b",
                    "e44899cb-7aef-4a2f-b14e-1a8923986dbb",
                    "dbeb3c02-aaf8-4722-816c-cd3512f10498",
                    "fcb815aa-48ef-4e7b-b5f9-1144342ba892"
                ]
            },
            "276000fc-bab5-452a-a4d5-2750ba0b5bf9": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1170,
                    "y": 690
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "a624d67c-ebc0-4f15-bdce-6277a6646687",
                    "cdb42d83-9a3d-4258-8648-ab3d5b985bd6",
                    "e44899cb-7aef-4a2f-b14e-1a8923986dbb",
                    "ad937819-f8aa-4a12-a31c-936eb847ec1b"
                ],
                "dependson": [
                    "4a7ea83a-6d8e-46e6-91af-4f470fccdfb7"
                ]
            },
            "0e64f095-65d1-481b-9856-b1f4a2e764bc": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 740,
                    "y": 620
                },
                "z": 2,
                "parent": "745030ed-3409-4bdb-b21e-7eaa8303cb54",
                "embeds": [],
                "dependson": [
                    "745030ed-3409-4bdb-b21e-7eaa8303cb54"
                ]
            },
            "1b5b4df0-9331-4373-9e30-7c3ae15c809e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1170,
                    "y": 810
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "3743171f-34b4-47a2-8bab-6ac579d038b9",
                    "0e64f095-65d1-481b-9856-b1f4a2e764bc"
                ],
                "dependson": [
                    "85efd767-624b-4b5e-8a79-e911ee5965a5",
                    "0c0e8ffd-3231-41cd-91e0-2110731813e2"
                ]
            },
            "2301d79d-c356-4957-91e8-de72ffffebdd": {
                "source": {
                    "id": "00cfb225-0fd6-4a61-bd34-28494982f77a"
                },
                "target": {
                    "id": "0e64f095-65d1-481b-9856-b1f4a2e764bc"
                }
            },
            "f885364f-0e20-40f2-9f71-08d8ab053227": {
                "source": {
                    "id": "2f348d40-564c-400e-b481-136e3e306ec9"
                },
                "target": {
                    "id": "0e64f095-65d1-481b-9856-b1f4a2e764bc"
                }
            }
        }
    },
    "Description": "DC/OS AWS CloudFormation Template"
}
